# Makefile generated by Smake.

SRCS = src/add.c src/main.c
HDRS = include/add.h

# Defaults
PKGS =
TARGET = simple
VERSION = unknown
PROJTYPE = exe
EXTRADEPS =
CONFIG ?= release
BUILD ?= build/$(CONFIG)
WARNINGS = -Wall -Wextra -Wno-unused-parameter
SMAKEFILE ?= Smakefile

CCOPTS = -Iinclude -fPIC
CCOPTS_release = -O2 -flto
CCOPTS_debug = -g
CCOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(CCOPTS_debug)

LDOPTS =
LDOPTS_release = -flto
LDOPTS_debug =
LDOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(LDOPTS_debug)

-include $(SMAKEFILE)

CFLAGS += $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS)
CXXFLAGS += $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS)
LDFLAGS += $(LDOPTS_$(CONFIG)) $(LDOPTS)

OBJS = $(patsubst src/%,$(BUILD)/obj/%.o,$(SRCS))
DEPS = $(patsubst src/%,$(BUILD)/dep/%.d,$(SRCS))

PKG_CONFIG ?= pkg-config
AR ?= ar

DESTDIR ?=
PREFIX ?= /usr/local
INCNAME ?= $(patsubst lib%,%,$(TARGET))

ifneq ($(PKGS),)
CFLAGS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
CXXFLAGS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
LDFLAGS += $(shell $(PKG_CONFIG) --libs $(PKGS))
endif

$(BUILD)/$(TARGET): $(OBJS) $(EXTRADEPS)
	@mkdir -p $(@D)
	$(CC) -o $@ $(OBJS) $(LDFLAGS)
	@echo Compiled $@.

$(BUILD)/obj/%.c.o: src/%.c
	@mkdir -p $(@D)
	$(CC) -o $@ -c $< $(CFLAGS)
$(BUILD)/obj/%.cc.o: src/%.cc
	@mkdir -p $(@D)
	$(CXX) -o $@ -c $< $(CXXFLAGS)

$(BUILD)/dep/%.c.d: src/%.c $(HDRS)
	@mkdir -p $(@D)
	$(CC) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CFLAGS)
$(BUILD)/dep/%.cc.d: src/%.cc $(HDRS)
	@mkdir -p $(@D)
	$(CXX) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CXXFLAGS)

.PHONY: install
install: $(BUILD)/$(TARGET)
	mkdir -p $(DESTDIR)$(PREFIX)/bin
	cp -f $^ $(DESTDIR)$(PREFIX)/bin
	chmod 755 $(DESTDIR)$(PREFIX)/bin/$(TARGET)

.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/bin/$(TARGET)

.PHONY: clean
clean:
	rm -rf $(BUILD)

ifneq ($(MAKECMDGOALS),clean)
-include $(DEPS)
endif
