# Makefile generated by smake.

SRCS = src/add.c
HDRS = include/adder/add.h
PUBLICHDRS = include/adder/add.h

# Defaults
PKGS =
TARGET = libadder
VERSION = unknown
PROJTYPE = lib
EXTRADEPS = 
EXTRAPUBLICDEPS = 
CONFIG ?= release
BUILDDIR ?= build
BUILD ?= $(BUILDDIR)/$(CONFIG)
WARNINGS = -Wall -Wextra -Wno-unused-parameter
SMAKEFILE ?= Smakefile
PHONIES = dumpdeps dumppublicdeps dumpprojtype clean distclean

PKG_CONFIG ?= pkg-config
AR ?= ar

CCOPTS = -Iinclude -fPIC
CCOPTS_release = -O2 -flto
CCOPTS_debug = -g
CCOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(CCOPTS_debug)

LDOPTS = 
LDOPTS_release = -flto
LDOPTS_debug =
LDOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(LDOPTS_debug)

-include $(SMAKEFILE)

CFLAGS += $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS)
CXXFLAGS += $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS)
LDFLAGS += $(LDOPTS_$(CONFIG)) $(LDOPTS)

OBJS = $(patsubst src/%,$(BUILD)/obj/%.o,$(SRCS))
DEPS = $(patsubst src/%,$(BUILD)/dep/%.d,$(SRCS))

DESTDIR ?=
PREFIX ?= /usr/local

ifneq ($(PKGS),)
CFLAGS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
CXXFLAGS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
LDFLAGS += $(shell $(PKG_CONFIG) --libs $(PKGS))
endif

all: $(BUILD)/$(TARGET).so $(BUILD)/$(TARGET).a

$(BUILD)/$(TARGET).so:  $(OBJS) $(EXTRADEPS)
	@mkdir -p $(@D)
	$(CC) -o $@ $(OBJS) -shared $(LDLAGS)
	touch $(BUILD)/.built
	@echo Created $@.

$(BUILD)/$(TARGET).a:  $(OBJS) $(EXTRADEPS)
	@mkdir -p $(@D)
	$(AR) crs $@ $(OBJS)
	touch $(BUILD)/.built
	@echo Created $@.


$(BUILD)/obj/%.c.o: src/%.c $(EXTRAPUBLICDEPS)
	@mkdir -p $(@D)
	$(CC) -o $@ -c $< $(CFLAGS)
$(BUILD)/obj/%.cc.o: src/%.cc $(EXTRAPUBLICDEPS)
	@mkdir -p $(@D)
	$(CXX) -o $@ -c $< $(CXXFLAGS)
	$(CC) -o $@ -c $< $(CFLAGS)

$(BUILD)/dep/%.c.d: src/%.c $(HDRS)
	@mkdir -p $(@D)
	# DEP
	$(CC) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CFLAGS)
$(BUILD)/dep/%.cc.d: src/%.cc $(HDRS)
	@mkdir -p $(@D)
	$(CXX) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CXXFLAGS)

.PHONY: install
install: $(BUILD)/$(TARGET).so $(BUILD)$(TARGET).a
	mkdir -p $(DESTDIR)$(PREFIX)/lib
	cp -f $^ $(DESTDIR)$(PREFIX)/lib
	mkdir -p $(DESTDIR)$(PREFIX)/include
	cp -rf include/* $(DESTDIR)$(PREFIX)/include

.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/lib/$(TARGET).so
	rm -f $(DESTDIR)$(PREFIX)/lib/$(TARGET).a
	rm -rf $(patsubst include/%,$(DESTDIR)$(PREFIX)/include/%,$(wildcard include/*))

.PHONY: clean
clean:
	rm -rf $(BUILD)

.PHONY: distclean
distclean:
	rm -rf $(BUILDDIR)

.PHONY: dumpdeps
dumpdeps:
	@echo $(addprefix $(PREPEND),$(SRCS) $(HDRS) $(EXTRADEPS))

.PHONY: dumppublicdeps
dumppublicdeps:
	@echo $(addprefix $(PREPEND),$(PUBLICHDRS) $(EXTRAPUBLICDEPS))

.PHONY: dumpprojtype
dumpprojtype:
	@echo $(PROJTYPE)

ifeq ($(filter $(PHONIES),$(MAKECMDGOALS)),)
-include $(DEPS)
endif
