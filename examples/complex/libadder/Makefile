# Makefile generated by smake.

PROJNAME = libadder
PROJTYPE = lib

SRCS = src/add.c
HDRS = include/adder/add.h
OBJS = $(patsubst src/%,$(BUILD)/obj/%.o,$(SRCS))
DEPS = $(patsubst src/%,$(BUILD)/dep/%.d,$(SRCS))
PUBLICHDRS = include/adder/add.h

# Defaults
PKGS =
EXTRADEPS = 
EXTRAPUBLICDEPS = 
CONFIG ?= release
BUILDDIR ?= build
BUILD ?= $(BUILDDIR)/$(CONFIG)
WARNINGS = -Wall -Wextra -Wno-unused-parameter
SMAKEFILE ?= Smakefile
DESTDIR ?=
PREFIX ?= /usr/local
PHONIES = dumpdeps dumppublicdeps dumpprojtype clean distclean

PKG_CONFIG ?= pkg-config
AR ?= ar

CCOPTS = -Iinclude -fPIC
CCOPTS_release = -O2 -flto
CCOPTS_debug = -g
CCOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(CCOPTS_debug)

LDOPTS = 
LDOPTS_release = -flto
LDOPTS_debug =
LDOPTS_sanitize = -fsanitize=address -fsanitize=undefined $(LDOPTS_debug)

runpfx = @echo $(1) $(2) && $(2)

.PHONY: all
all: $(BUILD)/$(PROJNAME).so $(BUILD)/$(PROJNAME).a

-include $(SMAKEFILE)

ifneq ($(PKGS),)
CCOPTS += $(shell $(PKG_CONFIG) --cflags $(PKGS))
LDOPTS += $(shell $(PKG_CONFIG) --libs $(PKGS))
endif

CFLAGS := $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS) $(CFLAGS)
CXXFLAGS := $(CCOPTS_$(CONFIG)) $(CCOPTS) $(WARNINGS) $(CXXFLAGS)
LDFLAGS := $(LDOPTS_$(CONFIG)) $(LDOPTS) $(LDFLAGS)

$(BUILD)/$(PROJNAME).so:  $(OBJS) $(EXTRADEPS)
	@mkdir -p $(@D)
	$(call runpfx,'(LD)',$(CC) -o $@ $(OBJS) -shared $(LDLAGS))
	touch $(BUILD)/.built
	@echo '(OK)' Created $@.
$(BUILD)/$(PROJNAME).a:  $(OBJS) $(EXTRADEPS)
	@mkdir -p $(@D)
	$(AR) crs $@ $(OBJS)
	touch $(BUILD)/.built
	@echo '(OK)' Created $@.



$(BUILD)/obj/%.c.o: src/%.c $(EXTRAPUBLICDEPS)
	@mkdir -p $(@D)
	$(call runpfx,'(CC)',$(CC) -o $@ -c $< $(CFLAGS))
$(BUILD)/obj/%.cc.o: src/%.cc $(EXTRAPUBLICDEPS)
	@mkdir -p $(@D)
	$(call runpfx,'(CXX)',$(CXX) -o $@ -c $< $(CXXFLAGS))

$(BUILD)/dep/%.c.d: src/%.c $(HDRS)
	@mkdir -p $(@D)
	$(call runpfx,'(DEP)',$(CC) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CFLAGS))
$(BUILD)/dep/%.cc.d: src/%.cc $(HDRS)
	@mkdir -p $(@D)
	$(call runpfx,'(DEP)',$(CXX) -o $@ -MM $< -MT $(patsubst src/%,$(BUILD)/obj/%.o,$<) $(CXXFLAGS))

.PHONY: install
install: $(BUILD)/$(PROJNAME).so $(BUILD)$(PROJNAME).a
	mkdir -p $(DESTDIR)$(PREFIX)/lib
	cp -f $^ $(DESTDIR)$(PREFIX)/lib
	mkdir -p $(DESTDIR)$(PREFIX)/include
	cp -rf include/* $(DESTDIR)$(PREFIX)/include

.PHONY: uninstall
uninstall:
	rm -f $(DESTDIR)$(PREFIX)/lib/$(PROJNAME).so
	rm -f $(DESTDIR)$(PREFIX)/lib/$(PROJNAME).a
	rm -rf $(patsubst include/%,$(DESTDIR)$(PREFIX)/include/%,$(wildcard include/*))

.PHONY: clean
clean:
	rm -rf $(PROJNAME) $(BUILD)

.PHONY: distclean
distclean:
	rm -rf $(BUILDDIR)

.PHONY: dumpdeps
dumpdeps:
	@echo $(addprefix $(PREPEND),$(SRCS) $(HDRS) $(EXTRADEPS))

.PHONY: dumppublicdeps
dumppublicdeps:
	@echo $(addprefix $(PREPEND),$(PUBLICHDRS) $(EXTRAPUBLICDEPS))

.PHONY: dumpprojtype
dumpprojtype:
	@echo $(PROJTYPE)

ifeq ($(filter $(PHONIES),$(MAKECMDGOALS)),)
-include $(DEPS)
endif
