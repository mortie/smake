#!/bin/sh

if [ -f Makefile ] && ! head -n 1 Makefile | grep "Makefile generated by Smake." >/dev/null; then
	echo "Makefile isn't generated by smake; refusing to overwrite."
	echo "To run smake, manually move or delete the existing Makefile."
	exit 1
fi

sources="$(find src -name '*.c' -or -name '*.cc')"
srcs="$(printf "%s" "$sources" | tr '\n' ' ')"
objs="$(printf "%s" "$sources" | sed 's#src/\(.*\)#obj/\1.o#' | tr '\n' ' ')"
deps="$(printf "%s" "$sources" | sed 's#src/\(.*\)#dep/\1.d#' | tr '\n' ' ')"
hdrs="$(find src include -name '*.h')"

if which nproc >/dev/null 2>&1; then
	cores="$(nproc)"
else
	cores=8
fi

echo "\
# Makefile generated by Smake.

SRCS = $srcs
OBJS = $objs
DEPS = $deps
HDRS = $hdrs

# Defaults
PKGS =
TARGET = main
VERSION = $(git describe 2>/dev/null || echo unknown)
WARNINGS = -Wall -Wextra -Wno-unused-parameter
FLAGS = -Iinclude -fPIC
PROJTYPE = exe

-include Smakefile

CFLAGS += \$(FLAGS) \$(WARNINGS)
CXXFLAGS += \$(FLAGS) \$(WARNINGS)
LDFLAGS ?=

PKG_CONFIG ?= pkg-config
AR ?= ar

DESTDIR ?=
PREFIX ?= /usr/local

ifeq (\$(filter \$(PROJTYPE),exe alib solib),)
\$(error Expected PROJTYPE to be exe, alib, or solib)
endif

ifneq (\$(PKGS),)
CFLAGS += \$(shell \$(PKG_CONFIG) --cflags \$(PKGS))
CXXFLAGS += \$(shell \$(PKG_CONFIG) --cflags \$(PKGS))
LDFLAGS += \$(shell \$(PKG_CONFIG) --libs \$(PKGS))
endif

# Build executable
ifeq (\$(PROJTYPE),exe)
\$(TARGET): \$(OBJS)
	\$(CC) -o \$@ \$^ \$(LDFLAGS)
endif

# Build shared library
ifeq (\$(PROJTYE),solib)
\$(TARGET): \$(OBJS)
	\$(CC) -o \$@ \$^ -shared \$(LDLAGS)
endif

# Build static library
ifeq (\$(PROJTYPE),alib)
\$(TARGET): \$(OBJS)
	\$(AR) crs \$@ \$(OBJ)
endif

obj/%.c.o: src/%.c
	@mkdir -p \$(@D)
	\$(CC) -o \$@ -c \$< \$(CFLAGS)
obj/%.cc.o: src/%.cc
	@mkdir -p \$(@D)
	\$(CXX) -o \$@ -c \$< \$(CXXFLAGS)

dep/%.c.d: src/%.c \$(HDRS)
	@mkdir -p \$(@D)
	\$(CC) -o \$@ -MM \$< -MT \$(patsubst src/%,obj/%.o,\$<) \$(CFLAGS)
dep/%.cc.d: src/%.cc \$(HDRS)
	@mkdir -p \$(@D)
	\$(CXX) -o \$@ -MM \$< -MT \$(patsubst src/%,obj/%.o,\$<) \$(CXXFLAGS)

.PHONY: clean
clean:
	rm -f \$(TARGET)
	rm -rf obj dep


# install exe
ifeq (\$(PROJTYPE),exe)
.PHONY: install
install: \$(TARGET)
	mkdir -p \$(DESTDIR)\$(PREFIX)/bin
	cp -f \$(TARGET) \$(DESTDIR)\$(PREFIX)/bin
	chmod 755 \$(DESTDIR)\$(PREFIX)/bin/\$(TARGET)

.PHONY: uninstall
uninstall:
	rm -f \$(DESTDIR)\$(PREFIX)/bin/\$(TARGET)
endif

-include \$(DEPS)" > Makefile
make -j "$cores" "$@"
